<style lang="less">
    @import './swiper.less';
</style>
<template>
    <view class="swiper">
        <view class="flex align center font base swiper-types">
            <block wx:for="{{types}}"
                   wx:key="{{index}}">
                <view @tap="typeChange"
                      data-index="{{index}}"
                      data-item="{{item}}"
                      class="child font gray pd-col25 {{swiperCurrent === index ? 'current':''}}">
                    {{ item.type }}
                </view>
            </block>
        </view>
        <swiper style="height:{{height}}rpx;"
                interval="{{interval}}"
                duration="{{duration}}"
                current="{{swiperCurrent}}"
                circular="{{circular}}"
                bindchange="tabbarSwiperChange">
            <block wx:for="{{5}}"
                   wx:key="{{index}}">
                <swiper-item>
                    <goods :datalist.sync="datalist" />
                </swiper-item>
            </block>
        </swiper>
    </view>
</template>
<script>
import wepy from 'wepy'
import goods from '@components/goods/goods'
export default class TabbarSwiper extends wepy.component {
    props = {
        height: {
            type: String,
            default: '350'
        },
        types: {
            type: Array,
            default: undefined
        },
        datalist: {
            type: String,
            default: undefined
        }
    }

    components = {
        goods
    }

    data = {
        indicatorDots: false,
        autoplay: false,
        circular: true,
        // interval: 5000,
        duration: 500,
        swiperCurrent: 0
    }

    methods = {
        tabbarSwiperChange(e) {
            this.swiperCurrent = e.detail.current
        },
        typeChange(e) {
            this.swiperChange(e.target.dataset)
        }
    }

    swiperChange(o) {
        const { index, item } = o
        this.swiperCurrent = index
        this.$emit('tabbarSwiperChange', item)
    }

    onLoad() {
        console.log(1, this.datalist)
    }
}
</script>
